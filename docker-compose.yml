services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server1
      - server2
      - server3
    networks:
      - app-network

  # Backend Service
  server1:
    build: .
    command: node backend/server1.js    
    ports:
      - "5001:5001"    
    environment:
      - NODE_ENV=production
      - PORT=5001
      - MONGODB_URI=mongodb+srv://narayanaudayagiri88:narayanaudayagiri88@cluster0.xfb8w.mongodb.net/synergy
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - .env
    volumes:
      - ./backend:/app/backend
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      prometheus:
        condition: service_started
    networks:
      - app-network

  server2:
    build: .
    command: node backend/server2.js
    ports:
      - "5002:5002"
    environment:
      - NODE_ENV=production
      - PORT=5002
      - MONGODB_URI=mongodb+srv://narayanaudayagiri88:narayanaudayagiri88@cluster0.xfb8w.mongodb.net/synergy
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - .env
    volumes:
      - ./backend:/app/backend
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      prometheus:
        condition: service_started
    networks:
      - app-network

  server3:
    build: .
    command: node backend/server3.js
    ports:
      - "5003:5003"
    environment:
      - NODE_ENV=production
      - PORT=5003
      - MONGODB_URI=mongodb+srv://narayanaudayagiri88:narayanaudayagiri88@cluster0.xfb8w.mongodb.net/synergy
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - .env
    volumes:
      - ./backend:/app/backend
      - /app/node_modules
    depends_on:
      redis:
        condition: service_healthy
      prometheus:
        condition: service_started
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: ./FinalFrontend
      dockerfile: Dockerfile
      ports:
      - "5173:5173"
      environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:5001
    volumes:
      - ./FinalFrontend:/app
      - /app/node_modules
    depends_on:
      - nginx
    networks:
      - app-network

  # Redis Service
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass RedisPassword123
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "RedisPassword123", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - app-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - app-network

  # Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - app-network

  locust:
    image: locustio/locust
    ports:
      - "8089:8089"
    volumes:
      - ./tests:/mnt/locust
    command: -f /mnt/locust/locustfile.py --host http://nginx
    depends_on:
      - nginx
    networks:
      - app-network

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  app-network:
    driver: bridge